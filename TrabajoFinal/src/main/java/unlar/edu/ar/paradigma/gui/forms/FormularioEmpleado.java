/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package unlar.edu.ar.paradigma.gui.forms;

import unlar.edu.ar.paradigma.gui.forms.abm.AddEmpleado;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import unlar.edu.ar.paradigma.controladores.EmpleadoController;
import unlar.edu.ar.paradigma.controladores.SetConexion;
import unlar.edu.ar.paradigma.gui.forms.abm.ModEmpleado;
import unlar.edu.ar.paradigma.gui.forms.grillas.GrillaEmpleado;
import unlar.edu.ar.paradigma.objetos.Empleado;

/**
 *
 * @author lucia
 */
public class FormularioEmpleado extends javax.swing.JPanel {

    private EmpleadoController empleadoController;

    /**
     * Creates new form FormularioEmpleado
     */
    public FormularioEmpleado() {
        initComponents();
        initCustomComponents();
        empleadoController = new EmpleadoController();
        try {
            Connection connection = SetConexion.getConnection();
            empleadoController.setConexion(connection);
        } catch (SQLException e) {
        }
        actualizarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grillaEmpleado = new unlar.edu.ar.paradigma.gui.forms.grillas.GrillaEmpleado();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jTable1.setModel(grillaEmpleado);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(54, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling czode here:
        int selectedRow = jTable1.getSelectedRow();
        if(selectedRow >=0){
            //Obtener el legajo del empleado
            Integer legajo = (Integer) jTable1.getValueAt(selectedRow,0);
            //Confirmar la eliminacion
            int confirm = JOptionPane.showConfirmDialog(this,
                    "øEstas seguro de que deseas eliminar al empleado con legajo" + legajo + "?", 
                    "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
            if(confirm == JOptionPane.YES_OPTION){
                //Llamar al metodo en EmpleadoController para eliminar el empleado
                Empleado empleado = empleadoController.extraer(legajo);
                if(empleado != null){
                    boolean eliminado = empleadoController.eliminar(empleado);
                    if(eliminado){
                        JOptionPane.showMessageDialog(this, "Empleado eliminado con exito","Exito",JOptionPane.INFORMATION_MESSAGE);
                        actualizarTabla();
                    }else{
                        JOptionPane.showMessageDialog(this, "No se encontro el empleado", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Seleccione un empleado", "Warning",JOptionPane.WARNING_MESSAGE);
            }
        
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         // Obtener la fila seleccionada
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0) {
        // Obtener el legajo del empleado seleccionado
        Integer legajo = (Integer) jTable1.getValueAt(selectedRow, 0);
        // Llamar al m√©todo del controlador para obtener el empleado por legajo
        Empleado empleado = empleadoController.extraer(legajo);
        if (empleado != null) {
            // Crear el formulario de modificacin y pasarle el empleado
            ModEmpleado modificarEmpleadoForm = new ModEmpleado(empleado,this);
            modificarEmpleadoForm.setVisible(true);
             actualizarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Empleado no encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un empleado", "Warning", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        AddEmpleado registrarEmpleadoForm = new AddEmpleado(this);
        registrarEmpleadoForm.setVisible(true);
    }// GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private unlar.edu.ar.paradigma.gui.forms.grillas.GrillaEmpleado grillaEmpleado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void initCustomComponents() {

        // DefaultTableModel model = new DefaultTableModel(
        // new Object [][] {
        // {null, null, null, null},
        // {null, null, null, null},
        // {null, null, null, null},
        // {null, null, null, null}
        // },
        // new String [] {
        // "ID-Legajo", "Apellido-Nombre"
        // }
        // );
        // jTable1.setModel(model);
        // jTable1.setPreferredScrollableViewportSize(new java.awt.Dimension(800, 400));
        // ScrollPane1.setPreferredSize(new java.awt.Dimension(800, 400));

        jButton1.setText("Agregar");

        // jButton1.addActionListener(e -> {
        // Definir las columnas que se mostrar√°n en el formulario agregar
        /// List<String> columnasEmpleado = List.of("ID-Legajo", "Apellido-Nombre");

        // Crear y mostrar el formulario de agregar
        // GenericFormAgregar formulario = new GenericFormAgregar(
        // (Frame) SwingUtilities.getWindowAncestor(this),
        // true,
        // columnasEmpleado
        // );
        // formulario.setVisible(true);
        // });

      

        jButton2.setText("Modificar");

        jButton3.setText("Eliminar");
        

        jButton4.setText("Cerrar");

        revalidate();
        repaint();
    }

    private void cargarEmpleados(List<Empleado> empleados) {
        GrillaEmpleado model = new GrillaEmpleado();
        jTable1.setModel(model);
        model.setRowCount(0);
        model.setDatos(new ArrayList<>(empleados));

        // for(Empleado empleado : empleados){
        // model.addRow(new Object[]{empleado.getLegajo(),
        // empleado.getApellido_nombre()});
        // }
    }

    public void actualizarTabla() {
        List<Empleado> empleados = empleadoController.extraerTodo();
        // MOstrar en tabla
        if (empleados != null && !empleados.isEmpty()) {
            cargarEmpleados(empleados);
        } else {
            System.out.println("No hay empleados");
        }

    }

}
