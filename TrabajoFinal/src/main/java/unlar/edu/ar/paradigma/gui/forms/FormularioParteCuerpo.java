/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package unlar.edu.ar.paradigma.gui.forms;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import unlar.edu.ar.paradigma.controladores.ParteCuerpoController;
import unlar.edu.ar.paradigma.controladores.SetConexion;
import unlar.edu.ar.paradigma.gui.forms.abm.AddParteCuerpo;
import unlar.edu.ar.paradigma.gui.forms.abm.ModParteCuerpo;

import unlar.edu.ar.paradigma.gui.forms.grillas.GrillaParteCuerpo;

import unlar.edu.ar.paradigma.objetos.ParteCuerpo;

/**
 *
 * @author lucia
 */
public class FormularioParteCuerpo extends javax.swing.JPanel {
    
    private ParteCuerpoController parteCuerpoController;

    /**
     * Creates new form ParteCuerpo
     */
    public FormularioParteCuerpo() {
        initComponents();
        initCustomComponents();
        
        parteCuerpoController = new ParteCuerpoController();
        try {
            Connection connection = SetConexion.getConnection();
            parteCuerpoController.setConexion(connection);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        actualizarTabla();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grillaParteCuerpo = new unlar.edu.ar.paradigma.gui.forms.grillas.GrillaParteCuerpo();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jTable1.setModel(grillaParteCuerpo);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AddParteCuerpo registrarParteCuerpo = new AddParteCuerpo(this);
        registrarParteCuerpo.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
             // TODO add your handling code here:
         // Obtener la fila seleccionada
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow >= 0) {
        // Obtener el codigo del Parte cuerpo seleccionado
        Integer codigo = (Integer) jTable1.getValueAt(selectedRow, 0);
        // Llamar al método del controlador para obtener el parte cuerpo por codigo
        ParteCuerpo parteCuerpo = parteCuerpoController.extraer(codigo);
        if (parteCuerpo != null) {
            // Crear el formulario de modificacin y pasarle parte cuerpo
            ModParteCuerpo modificarParteCuerpoForm = new ModParteCuerpo(parteCuerpo,this);
            modificarParteCuerpoForm.setVisible(true);
             actualizarTabla();
        } else {
            JOptionPane.showMessageDialog(this, "Parte cuerpo no se ha encontrado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Selecciona un parte cuerpo", "Warning", JOptionPane.WARNING_MESSAGE);
    }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
    
    if (selectedRow >= 0) {
        // Obtener el codigo del motivo desde la tabla
        Integer codigo = (Integer) jTable1.getValueAt(selectedRow, 0);
        
        // Confirmar la eliminacion
        int confirm = JOptionPane.showConfirmDialog(this,
                "¿Estas seguro de que deseas eliminar el parte cuerpo con codigo " + codigo + "?",
                "Confirmar eliminacion", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Llamar al metodo en partecuerpo controller para eliminar el parte cuerpo
            ParteCuerpo parteCuerpo = parteCuerpoController.extraer(codigo);
            if (parteCuerpo != null) {
                boolean eliminado = parteCuerpoController.eliminar(parteCuerpo);
                if (eliminado) {
                    JOptionPane.showMessageDialog(this, "Parte cuerpo eliminado con exito", "exito", JOptionPane.INFORMATION_MESSAGE);
                    actualizarTabla(); // Actualizar la tabla para reflejar los cambios
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el parte cuerpo", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Seleccione un parte cuerpo para eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private unlar.edu.ar.paradigma.gui.forms.grillas.GrillaParteCuerpo grillaParteCuerpo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    public void actualizarTabla() {
        List<ParteCuerpo> parteCuerpo = parteCuerpoController.extraerTodo();
        if (parteCuerpo != null && !parteCuerpo.isEmpty()) {
            cargarParteCuerpo(parteCuerpo);
        } else {
            System.out.println("No hay parte cuerpo para mostrar");
        }
    }
    
        private void cargarParteCuerpo(List<ParteCuerpo> tipoAccidente) {
        GrillaParteCuerpo model = new GrillaParteCuerpo();
        jTable1.setModel(model);
        model.setRowCount(0);
        model.setDatos(new ArrayList<>(tipoAccidente));
    }
    
    
    
    private void initCustomComponents() {
   
         jButton1.setText("Agregar");
         
        jButton2.setText("Modificar");

        jButton3.setText("Eliminar");
        
        jButton4.setText("Cerrar");
        
       
        
        revalidate();
        repaint();
    }
    
    
    
    
}
