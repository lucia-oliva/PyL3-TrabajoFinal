/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package unlar.edu.ar.paradigma.gui.forms;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import unlar.edu.ar.paradigma.controladores.SetConexion;
import unlar.edu.ar.paradigma.controladores.ZonaCuerpoController;
import unlar.edu.ar.paradigma.gui.forms.abm.AddZonaCuerpo;
import unlar.edu.ar.paradigma.gui.forms.abm.ModZonaCuerpo;
import unlar.edu.ar.paradigma.gui.forms.grillas.GrillaZonaCuerpo;
import unlar.edu.ar.paradigma.objetos.ZonaCuerpo;

/**
 *
 * @author lucia
 */
public class FormularioZonaCuerpo extends javax.swing.JPanel {

    private ZonaCuerpoController zonaCuerpoController;
    /**
     * Creates new form Formulario zonaCuerpo
     */
    public FormularioZonaCuerpo() {
        initComponents();
        initCustomComponents();
        
        zonaCuerpoController = new ZonaCuerpoController();
        try {
            Connection connection = SetConexion.getConnection();
            zonaCuerpoController.setConexion(connection);
        } catch (SQLException e) {
            System.out.println("No se pudo establecer la conexion en Formulario");
        }
        actualizarTabla();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grillaTipoAccidente = new unlar.edu.ar.paradigma.gui.forms.grillas.GrillaTipoAccidente();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        jTable1.setModel(grillaTipoAccidente);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AddZonaCuerpo registrarZonaCuerpo = new AddZonaCuerpo(this);
    registrarZonaCuerpo.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            Integer idZona = (Integer) jTable1.getValueAt(selectedRow, 0);

            ZonaCuerpo zonaCuerpo = zonaCuerpoController.extraer(idZona);

            if (zonaCuerpo != null) {
                ModZonaCuerpo modificarZonaCuerpo = new ModZonaCuerpo(zonaCuerpo, this);
                modificarZonaCuerpo.setVisible(true);
                actualizarTabla();
            } else {
                JOptionPane.showMessageDialog(this, "Zona no encontrada", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecciona una zona", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Obtener la fila seleccionada en la tabla
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow >= 0) {
            // Obtener el código de la zona desde la tabla
            Integer codigo = (Integer) jTable1.getValueAt(selectedRow, 0);

            // Confirmar la eliminación
            int confirm = JOptionPane.showConfirmDialog(this,
                    "¿Estás seguro de que deseas eliminar la zona con código " + codigo + "?",
                    "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Llamar al método en ZonaCuerpoController para eliminar la zona
                ZonaCuerpo zonaCuerpo = zonaCuerpoController.extraer(codigo);
                if (zonaCuerpo != null) {
                    boolean eliminado = zonaCuerpoController.eliminar(zonaCuerpo);
                    if (eliminado) {
                        JOptionPane.showMessageDialog(this, "Zona eliminada con éxito", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                        actualizarTabla(); // Actualizar la tabla para reflejar los cambios
                    } else {
                        JOptionPane.showMessageDialog(this, "No se pudo eliminar la zona", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una zona para eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private unlar.edu.ar.paradigma.gui.forms.grillas.GrillaTipoAccidente grillaTipoAccidente;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

        public void actualizarTabla() {
            List<ZonaCuerpo> zonasCuerpo = zonaCuerpoController.extraerTodo();
            // MOstrar en tabla
            if (zonasCuerpo != null && !zonasCuerpo.isEmpty()) {
                cargarZonasCuerpo(zonasCuerpo);
            } else {
                System.out.println("No hay zonas");
            }

        }
    
        private void cargarZonasCuerpo(List<ZonaCuerpo> zonaCuerpo) {
            GrillaZonaCuerpo model = new GrillaZonaCuerpo();
            jTable1.setModel(model);
            model.setRowCount(0);
            model.setDatos(new ArrayList<>(zonaCuerpo));
        }
    
    
    
    private void initCustomComponents() {

        jButton1.setText("Agregar");

        jButton2.setText("Modificar");

        jButton3.setText("Eliminar");
        
        jButton4.setText("Cerrar");
        
       
        
        revalidate();
        repaint();
    }
}
