/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package unlar.edu.ar.paradigma.gui.forms.abm;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import unlar.edu.ar.paradigma.controladores.AccidenteController;
import unlar.edu.ar.paradigma.controladores.TipoAccidenteController;
import unlar.edu.ar.paradigma.controladores.SetConexion;
import unlar.edu.ar.paradigma.gui.Principal;
import unlar.edu.ar.paradigma.gui.forms.FormularioTipoAccidente;
import unlar.edu.ar.paradigma.objetos.AccidenteDTO;
import unlar.edu.ar.paradigma.objetos.TipoAccidente;


/**
 *
 * @author facun
 */
public class AddAccidente extends javax.swing.JFrame {

        private AccidenteController accidenteController;
        private Principal principal;
    
    /**
     * Creates new form AbMotivo
     */
    public AddAccidente(Principal principal) {
        this.principal = principal;
        initComponents();
        
        
        accidenteController = new AccidenteController();
        try {
        Connection connection = SetConexion.getConnection();
            accidenteController.setConexion(connection);
        } catch (SQLException e) {
            System.err.println("Error al establecer la conexiï¿½n: " + e.getMessage());
        }
        llenarComboBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlEmpleado = new javax.swing.JLabel();
        jbAceptar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jtfUbicacion = new javax.swing.JTextField();
        jlUbicacion = new javax.swing.JLabel();
        jlMotivo = new javax.swing.JLabel();
        jlTipoAccidente = new javax.swing.JLabel();
        jlParteCuerpo = new javax.swing.JLabel();
        jlZonaCuerpo = new javax.swing.JLabel();
        jcbEmpleado = new javax.swing.JComboBox<>();
        jcbMotivo = new javax.swing.JComboBox<>();
        jcbTipoAccidente = new javax.swing.JComboBox<>();
        jcbParteCuerpo = new javax.swing.JComboBox<>();
        jcbZonaCuerpo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlEmpleado.setText("Empleado:");

        jbAceptar.setText("Aceptar");
        jbAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAceptarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jtfUbicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfUbicacionActionPerformed(evt);
            }
        });

        jlUbicacion.setText("Ubicacion:");

        jlMotivo.setText("Motivo:");

        jlTipoAccidente.setText("Tipo de accidente:");

        jlParteCuerpo.setText("Parte del cuerpo:");

        jlZonaCuerpo.setText("Zona del cuerpo:");

        jcbEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEmpleadoActionPerformed(evt);
            }
        });

        jcbMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbTipoAccidente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbTipoAccidente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoAccidenteActionPerformed(evt);
            }
        });

        jcbParteCuerpo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbParteCuerpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbParteCuerpoActionPerformed(evt);
            }
        });

        jcbZonaCuerpo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbZonaCuerpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbZonaCuerpoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlTipoAccidente)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbAceptar)
                                .addGap(17, 17, 17))
                            .addComponent(jlZonaCuerpo)
                            .addComponent(jlParteCuerpo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbTipoAccidente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbZonaCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbParteCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlUbicacion)
                            .addComponent(jlEmpleado)
                            .addComponent(jlMotivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbCancelar)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlUbicacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlEmpleado)
                    .addComponent(jcbEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlMotivo)
                    .addComponent(jcbMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTipoAccidente)
                    .addComponent(jcbTipoAccidente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlZonaCuerpo)
                    .addComponent(jcbZonaCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlParteCuerpo)
                    .addComponent(jcbParteCuerpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbAceptar))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAceptarActionPerformed
        // Obtener datos seleccionados de los comboBoxes
        int numero = accidenteController.obtenerNuevaId();
        String empleado = jcbEmpleado.getSelectedItem().toString();
        String motivo = jcbMotivo.getSelectedItem().toString();
        String parteCuerpo = jcbParteCuerpo.getSelectedItem().toString();
        String zonaCuerpoSelect = jcbZonaCuerpo.getSelectedItem().toString();
        String ubicacion = jtfUbicacion.getText();
        String tipoAccidente = jcbTipoAccidente.getSelectedItem().toString();
        
        int zonaCuerpo = "Izquierda".equals(zonaCuerpoSelect) ? 0 : 1;

        // Obtener IDs segÃºn lo que estÃ© seleccionado (asumiendo que hay mÃ©todos para obtenerlos)
        int legajo = accidenteController.obtenerIdEmpleado(empleado);
        int codigo_motivo = accidenteController.obtenerIdMotivo(motivo);
        int codigo_tipo_accidente = accidenteController.obtenerIdTipoAccidente(tipoAccidente);
        int id_zona = accidenteController.obtenerIdZonaCuerpo(parteCuerpo, zonaCuerpo);
        int codigo = accidenteController.obtenerIdParteCuerpo(parteCuerpo);
        
        

        // Crear objeto Accidente
        AccidenteDTO accidenteDTO = new AccidenteDTO();
        accidenteDTO.setNumero(numero);
        accidenteDTO.setLegajo(legajo);
        accidenteDTO.setCodigo_motivo(codigo_motivo);
        accidenteDTO.setCodigo_tipo_accidente(codigo_tipo_accidente);
        accidenteDTO.setId_zona(id_zona);
        accidenteDTO.setCodigo(codigo);
        accidenteDTO.setUbicacion(ubicacion);
        accidenteDTO.setFecha_del_accidente(new java.sql.Date(new java.util.Date().getTime()));

        if (accidenteController.crear(accidenteDTO)) {
            System.out.println("Accidente agregado correctamente.");
            principal.actualizarTabla();
        } else {
            System.out.println("Error al agregar el accidente.");
        }

        // Cerrar el formulario
        this.dispose();
    }//GEN-LAST:event_jbAceptarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
                dispose();

    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtfUbicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfUbicacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfUbicacionActionPerformed

    private void jcbEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbEmpleadoActionPerformed

    private void jcbTipoAccidenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoAccidenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTipoAccidenteActionPerformed

    private void jcbZonaCuerpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbZonaCuerpoActionPerformed
        // Obtener la opciÃ³n seleccionada de jcbZonaCuerpo
        String zonaSeleccionada = (String) jcbZonaCuerpo.getSelectedItem();

        // Validar que no sea nulo o vacÃ­o
        if (zonaSeleccionada != null && !zonaSeleccionada.isEmpty()) {
            // Limpiar todas las opciones previas de jcbParteCuerpo
            jcbParteCuerpo.removeAllItems();

            // Obtener las partes del cuerpo segÃºn la zona desde AccidenteController
            List<String> partesCuerpo = accidenteController.obtenerPartesCuerpoPorZona(zonaSeleccionada);

            // Llenar jcbParteCuerpo con las nuevas opciones
            for (String parte : partesCuerpo) {
                jcbParteCuerpo.addItem(parte);
            }

            // Verificar si la lista estÃ¡ vacÃ­a
            if (partesCuerpo.isEmpty()) {
                System.err.println("No se encontraron partes del cuerpo para la zona: " + zonaSeleccionada);
            }
        }
    }//GEN-LAST:event_jcbZonaCuerpoActionPerformed

    private void jcbParteCuerpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbParteCuerpoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbParteCuerpoActionPerformed

    private void llenarComboBoxes() {
        try {
            // Llenar ComboBox de Empleados
            List<String> empleados = accidenteController.obtenerEmpleados();
            DefaultComboBoxModel<String> modeloEmpleados = new DefaultComboBoxModel<>();
            for (String empleado : empleados) {
                modeloEmpleados.addElement(empleado);
            }
            jcbEmpleado.setModel(modeloEmpleados);

            // Llenar ComboBox de Motivos
            List<String> motivos = accidenteController.obtenerMotivos();
            DefaultComboBoxModel<String> modeloMotivos = new DefaultComboBoxModel<>();
            for (String motivo : motivos) {
                modeloMotivos.addElement(motivo);
            }
            jcbMotivo.setModel(modeloMotivos);

            // Llenar ComboBox de Tipos de Accidente
            List<String> tiposAccidente = accidenteController.obtenerTiposAccidente();
            DefaultComboBoxModel<String> modeloTiposAccidente = new DefaultComboBoxModel<>();
            for (String tipo : tiposAccidente) {
                modeloTiposAccidente.addElement(tipo);
            }
            jcbTipoAccidente.setModel(modeloTiposAccidente);

            // Llenar ComboBox de Partes del Cuerpo
            List<String> partesCuerpo = accidenteController.obtenerPartesCuerpo();
            DefaultComboBoxModel<String> modeloPartesCuerpo = new DefaultComboBoxModel<>();
            for (String parte : partesCuerpo) {
                modeloPartesCuerpo.addElement(parte);
            }
            jcbParteCuerpo.setModel(modeloPartesCuerpo);

            // Llenar ComboBox de Zonas del Cuerpo (valores predefinidos)
            String[] opcionesZonaCuerpo = {"Izquierda", "Derecha"};
            DefaultComboBoxModel<String> modeloZonaCuerpo = new DefaultComboBoxModel<>(opcionesZonaCuerpo);
            jcbZonaCuerpo.setModel(modeloZonaCuerpo);

        } catch (Exception e) {
            System.err.println("Error al llenar los comboBoxes: " + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAccidente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAccidente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAccidente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAccidente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Principal principal = new Principal();
                new AddAccidente(principal).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAceptar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JComboBox<String> jcbEmpleado;
    private javax.swing.JComboBox<String> jcbMotivo;
    private javax.swing.JComboBox<String> jcbParteCuerpo;
    private javax.swing.JComboBox<String> jcbTipoAccidente;
    private javax.swing.JComboBox<String> jcbZonaCuerpo;
    private javax.swing.JLabel jlEmpleado;
    private javax.swing.JLabel jlMotivo;
    private javax.swing.JLabel jlParteCuerpo;
    private javax.swing.JLabel jlTipoAccidente;
    private javax.swing.JLabel jlUbicacion;
    private javax.swing.JLabel jlZonaCuerpo;
    private javax.swing.JTextField jtfUbicacion;
    // End of variables declaration//GEN-END:variables
}
